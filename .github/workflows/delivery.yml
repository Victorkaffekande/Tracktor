name: delivery

on:
  push:
    branches: [ continuous-delivery ]
    
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'

jobs:
  get-last-version-gateway:
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve last image version for Gateway
        id: get_version_gateway
        run: |
          last_version_gateway=$(curl -s https://registry.hub.docker.com/v2/repositories/magnusovergaard/gateway/tags/?page_size=1 | jq -r '.results[0].name' | cut -d'-' -f2)
          last_version_gateway="${last_version_gateway//\"}"
          new_version_gateway=$((last_version_gateway + 1))
          echo "::set-output name=new_version_gateway::$new_version_gateway"
  build-and-push-gateway:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Gateway
        uses: docker/build-push-action@v4
        with:
          context: .
          file: deployable projects/Gateway/Dockerfile
          push: true
          tags: magnusovergaard/gateway:${{needs.get_version_gateway.outputs.new_version_gateway}}
  get-last-version-alarm-api:
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve last image version for AlarmApi
        id: get_version_alarm_api
        run: |
          last_version_alarm_api=$(curl -s https://registry.hub.docker.com/v2/repositories/magnusovergaard/alarm-api/tags/?page_size=1 | jq -r '.results[0].name' | cut -d'-' -f2)
          last_version_alarm_api="${last_version_alarm_api//\"}"
          new_version_alarm_api=$((last_version_alarm_api + 1))
          echo "::set-output name=new_version_alarm_api::$new_version_alarm_api"
  build-and-push-alarm_api:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}    
          
      - name: Build and push AlarmAPI
        uses: docker/build-push-action@v4
        with:
          context: .
          file: deployable projects/AlarmAPI/Dockerfile
          push: true
          tags: magnusovergaard/alarm-api:${{needs.get_version_alarm_api.outputs.new_version_alarm_api}}
  get-last-version-alarm-consumer:
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve last image version for AlarmConsumer
        id: get_version_alarm_consumer
        run: |
          last_version_alarm_consumer=$(curl -s https://registry.hub.docker.com/v2/repositories/magnusovergaard/alarm_consumer/tags/?page_size=1 | jq -r '.results[0].name' | cut -d'-' -f2)
          last_version_alarm_consumer="${last_version_alarm_consumer//\"}"
          new_version_alarm_consumer=$((last_version_alarm_consumer + 1))
          echo "::set-output name=new_version_alarm_consumer::$new_version_alarm_consumer"       
  build-and-push-alarm_consumer:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
     
      - name: Build and push AlarmConsumer
        uses: docker/build-push-action@v4
        with:
          context: .
          file: deployable projects/AlarmConsumer/Dockerfile
          push: true
          tags: magnusovergaard/alarm_consumer:${{needs.get_version_alarm_consumer.outputs.new_version_alarm_consumer}}
  get-last-version-location-consumer:
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve last image version for LocationConsumer
        id: get_version_location_consumer
        run: |
          last_version_location_consumer=$(curl -s https://registry.hub.docker.com/v2/repositories/magnusovergaard/location-consumer/tags/?page_size=1 | jq -r '.results[0].name' | cut -d'-' -f2)
          last_version_location_consumer="${last_version_location_consumer//\"}"
          new_version_location_consumer=$((last_version_location_consumer + 1))
          echo "::set-output name=new_version_location_consumer::$new_version_location_consumer" 
  build-and-push-location-consumer:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
       
      - name: Build and push LocationConsumer
        uses: docker/build-push-action@v4
        with:
          context: .
          file: deployable projects/LocationConsumer/Dockerfile
          push: true
          tags: magnusovergaard/location-consumer:${{needs.get_version_location_consumer.outputs.new_version_location_consumer}}
  get-last-version-location-api:
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve last image version for LocationAPI
        id: get_version_location_api
        run: |
          last_version_location_api=$(curl -s https://registry.hub.docker.com/v2/repositories/magnusovergaard/location-api/tags/?page_size=1 | jq -r '.results[0].name' | cut -d'-' -f2)
          last_version_location_api="${last_version_location_api//\"}"
          new_version_location_api=$((last_version_location_api + 1))
          echo "::set-output name=new_version_location_api::$new_version_location_api" 
  build-and-push-location-api:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
       
      - name: Build and push LocationAPI
        uses: docker/build-push-action@v4
        with:
          context: .
          file: deployable projects/LocationAPI/Dockerfile
          push: true
          tags: magnusovergaard/location-api:${{needs.get_version_location_api.outputs.new_version_location_api}}
  get-last-version-location-retrieval-api:
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve last image version for LocationRetrievalAPI
        id: get_version_location_retrieval_api
        run: |
          last_version_location_retrieval_api=$(curl -s https://registry.hub.docker.com/v2/repositories/magnusovergaard/location-retrieval-api/tags/?page_size=1 | jq -r '.results[0].name' | cut -d'-' -f2)
          last_version_location_retrieval_api="${last_version_location_retrieval_api//\"}"
          new_version_location_retrieval_api=$((last_version_location_retrieval_api + 1))
          echo "::set-output name=new_version_location_retrieval_api::$new_version_location_retrieval_api"       
  build-and-push-location-retrieval-api:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
       
      - name: Build and push LocationRetrievalApi
        uses: docker/build-push-action@v4
        with:
          context: .
          file: deployable projects/LocationRetrievalApi/Dockerfile
          push: true
          tags: magnusovergaard/location-retrieval-api:${{needs.get_version_location_retrieval_api.outputs.new_version_location_retrieval_api}}
