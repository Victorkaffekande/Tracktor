version: '3.8'

services:
  
  gateway:
    build:
      context: .
      dockerfile: deployable projects/Gateway/Dockerfile
    ports:
      - "5004:80"
        
  location-consumer:
    build:
      context: .
      dockerfile: deployable projects/LocationConsumer/Dockerfile
    env_file:
      - deployable projects/LocationConsumer/.env
    depends_on:
      cassandra-1:
        condition: service_healthy
      cassandra-2:
        condition: service_healthy
      cassandra-3:
        condition: service_healthy
      location-retrieval-api:
        condition: service_started
    networks:
      - cassandra
  
  location-api:
    build:
      context: .
      dockerfile: deployable projects/LocationAPI/Dockerfile
    env_file:
      - deployable projects/LocationAPI/.env
    depends_on:
      cassandra-1:
        condition: service_healthy
      cassandra-2:
        condition: service_healthy
      cassandra-3:
        condition: service_healthy
    ports:
      - "5005:80"
 
  location-retrieval-api:
    build:
      context: .
      dockerfile: deployable projects/LocationRetrievalApi/Dockerfile
    depends_on:
      cassandra-1:
        condition: service_healthy
      cassandra-2:
        condition: service_healthy
    ports:
      - "5006:80"
    networks:
      - cassandra

  cassandra-1:
    image: cassandra:latest
    container_name: cassandra-1
    hostname: cassandra1
    environment: &environment
      CASSANDRA_CLUSTER_NAME: MyTestCluster
      CASSANDRA_SEEDS: "cassandra1,cassandra2"
      CASSANDRA_DC: DC1
      CASSANDRA_RACK: RACK1
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
      CASSANDRA_NUM_TOKENS: 16
    networks:
      - cassandra
    healthcheck:
      test: ["CMD-SHELL", "nodetool status | grep UN"]
      interval: 30s
      timeout: 30s
      retries: 5

  cassandra-2:
    image: cassandra:latest
    container_name: cassandra-2
    hostname: cassandra2
    environment:
      *environment
    networks:
      - cassandra
    depends_on:
      cassandra-1:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "nodetool status | grep UN"]
      interval: 30s
      timeout: 30s
      retries: 5

  cassandra-3:
    image: cassandra:latest
    container_name: cassandra-3
    hostname: cassandra3
    environment:
      *environment
    networks:
      - cassandra
    depends_on:
      cassandra-2:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "nodetool status | grep UN"]
      interval: 30s
      timeout: 30s
      retries: 5

networks:
  cassandra:
    name: cassandra